#include <iostream>
#include <string>

class IPAddress {
protected:
    std::string ipAddress;

public:
    IPAddress(const std::string& address) : ipAddress(address) {}

    IPAddress(const IPAddress& other) : ipAddress(other.ipAddress) {}

    void print() const {
        std::cout << ipAddress << std::endl;
    }
};

class IPAddressChecked : public IPAddress {
private:
    bool correct;

public:
    IPAddressChecked(const std::string& address, bool isCorrect) : IPAddress(address), correct(isCorrect) {}

    IPAddressChecked(const IPAddressChecked& other) : IPAddress(other), correct(other.correct) {}

    void print() const {
        IPAddress::print();
        std::cout << (correct ? "Correct" : "Not Correct") << std::endl;
    }
};

int main() {
    std::string ip1, ip2, ip3;
    bool isCorrect;

    std::cout << "Enter IP address 1: ";
    std::cin >> ip1;

    std::cout << "Enter IP address 2: ";
    std::cin >> ip2;

    std::cout << "Enter IP address 3: ";
    std::cin >> ip3;

    std::cout << "Is IP address 2 correct? (1/0): ";
    std::cin >> isCorrect;

    IPAddress ipAddress(ip1);
    IPAddressChecked checkedIPAddress1(ip2, isCorrect);
    IPAddressChecked checkedIPAddress2(ip3, true);

    std::cout << "IPAddress 1: ";
    ipAddress.print();

    std::cout << "IPAddressChecked 1: ";
    checkedIPAddress1.print();

    std::cout << "IPAddressChecked 2: ";
    checkedIPAddress2.print();

    return 0;
}